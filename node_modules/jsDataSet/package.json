{
  "name": "jsDataSet",
  "version": "1.0.0",
  "description": "DataSet (like .Net) made available for javascript and more",
  "main": "src/jsDataSet.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "lodash": "~3.1.0",
    "observe-js": "~0.4.2",
    "jsDataQuery": "git+https://github.com/gaelazzo/jsDataQuery.git"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-watch": "^0.6.1",
    "grunt-contrib-yuidoc": "^0.7.0",
    "grunt-karma": "^0.10.1",
    "jasmine-core": "^2.2.0",
    "jasmine-collection-matchers": "*",
    "karma": "^0.12.31",
    "karma-jasmine": "^0.3.5",
    "karma-junit-reporter": "^0.2.2",
    "karma-phantomjs-launcher": "^0.1.4",
    "karma-sauce-launcher": "^0.2.10",
    "load-grunt-tasks": "^3.1.0",
    "time-grunt": "^1.0.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gaelazzo/jsDataSet.git"
  },
  "keywords": [
    "DataSet",
    "javascript",
    "library"
  ],
  "author": {
    "name": "Gaetano Lazzo"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/gaelazzo/jsDataSet/issues"
  },
  "homepage": "https://github.com/gaelazzo/jsDataSet",
  "gitHead": "53754bc026194e1b2b6b6d989e61680bd4760697",
  "readme": "#jsDataSet\r\n.Net DataSet made available for javaScript (and much more)\r\n\r\n# Summary \r\nA **DataSet** is a collection of DataTables and relations between tables (DataRelation).\r\n\r\nA **DataRelation** is a function that allow to navigate from a row in a table to other rows in same table or other tables matching the value of parent fields in the parent table with child fields in the child table.\r\n\r\nA **DataTable** is a set of DataRow(s), and can have a primary key. Special functions are available in order to manage autoincrement columns, default values to give when a new row is created.\r\n\r\nA **DataRow** is a plain object attached to a ghost-class that observes it. So given a plain object o, calling r = new DataRow(o) creates a DataRow object that can be added to a table. The original object o can be modified at pleasure, and the linked DataRow r has many useful functions like:\r\n\r\n1. **del**()  to mark the row \"deleted\"\r\n\r\n2. **detach** ()  to discard the row losing all change\r\n\r\n3. **rejectChanges**() to revert any changes made to the original object since the creation or last acceptChanges()\r\n\r\n4. **acceptChanges**() makes changes to the row permanent\r\n\r\n5. **originalRow**() return the values of the original row\r\n\r\n6. **getParentRows**(relName), **getParentsInTable**(parentTableName), **getChildsInTable**(childTableName), **getChildRows**(relName)  are useful to navigate from a row to others.\r\n\r\nA DataRow has a **status** that can be added, unchanged, modified, deleted, detached.\r\nIt is possible to access old/new values of a DataRow when they have been modified, with the function getValue(fieldName, dataRowVersion) where dataRowVersion can be \"original\", \"current\"\r\n\r\nIt's also possible to accept/reject changes on the entire DataTable or DataSet all at once, merging changes of a DataSet into another one (see **importData**, **mergeAsPatch** , **mergeAsPost**, **mergeAsPut**). A DataSet can also be serialized/deserialized into a plain object (that includes also all original/modified values of all rows).  The serialized version can optionally contain also the structure of the DataSet (key, relations, defaults, orderings, autoincrement columns and so on).\r\n\r\nIt's also possible to delete a row with all relative children (with cascading effect) from a DataSet, with the function **cascadeDelete**(row).\r\n\r\nA full list of available function is available in the auto-generated yui doc.\r\n\r\n",
  "readmeFilename": "README.md",
  "_id": "jsDataSet@1.0.0",
  "_shasum": "b3dbdbcdec767dd6acd223de7b18858c01e92c32",
  "_from": "git://github.com/gaelazzo/jsDataSet.git",
  "_resolved": "git://github.com/gaelazzo/jsDataSet.git#53754bc026194e1b2b6b6d989e61680bd4760697"
}
